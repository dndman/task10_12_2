#!/bin/bash

. ./config

#all environment will be some later, after the main job will work
#installing docker
apt-get update
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
apt-get update
apt-get -y install docker-ce

#installing bridge-utils(i dont care if it not need. just so)
#apt-get -y install bridge-utils
#echo "
#auto dockerbridge


#installing docker-compose
#apt-get -y install python-pip
#pip install docker-compose
curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

#making docker-compose.yml

echo "
#compose file here
nginx:
 image: nginx:1.13
 container_name: nginx_container_1
#volumes are mounting here
volumes:
 - /etc/nginx/sites-available/default:/etc/nginx/sites-available/default

# ports:
#  - \"80:8080\"
# links:
#  - httpd
# networks:
#  - dockerbridge

# command: /bin/bash

httpd:
 image: httpd:2.4
 container_name: httpd_container_1
#command: sed -i 's/*:80/'$APACHE_VLAN_IP:80'/' /etc/apache2/sites-available/000-default.conf
#command: sed -i 's/Listen 80/Listen $APACHE_VLAN_IP:80/' /etc/apache2/ports.conf

# ports:
#  - \"80\"
# links:
#  - nginx
# networks:
#  - dockerbridge



" > docker-compose.yml

#launch docker-compose
#cd /workdir in future there will be a correct way to working dir
docker-compose up -d


